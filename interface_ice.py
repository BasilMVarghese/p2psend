# **********************************************************************
#
# Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
#
# This copy of Ice is licensed to you under the terms described in the
# ICE_LICENSE file included in this distribution.
#
# **********************************************************************
#
# Ice version 3.5.1
#
# <auto-generated>
#
# Generated from file `interface.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

import Ice, IcePy

# Start of module data
_M_data = Ice.openModule('data')
__name__ = 'data'

if 'sendfile' not in _M_data.__dict__:
    _M_data.sendfile = Ice.createTempClass()
    class sendfile(Ice.Object):
        def __init__(self):
            if Ice.getType(self) == _M_data.sendfile:
                raise RuntimeError('data.sendfile is an abstract class')

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::data::sendfile')

        def ice_id(self, current=None):
            return '::data::sendfile'

        def ice_staticId():
            return '::data::sendfile'
        ice_staticId = staticmethod(ice_staticId)

        def sendImage(self, kind, file, current=None):
            pass

        def __str__(self):
            return IcePy.stringify(self, _M_data._t_sendfile)

        __repr__ = __str__

    _M_data.sendfilePrx = Ice.createTempClass()
    class sendfilePrx(Ice.ObjectPrx):

        def sendImage(self, kind, file, _ctx=None):
            return _M_data.sendfile._op_sendImage.invoke(self, ((kind, file), _ctx))

        def begin_sendImage(self, kind, file, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_data.sendfile._op_sendImage.begin(self, ((kind, file), _response, _ex, _sent, _ctx))

        def end_sendImage(self, _r):
            return _M_data.sendfile._op_sendImage.end(self, _r)

        def checkedCast(proxy, facetOrCtx=None, _ctx=None):
            return _M_data.sendfilePrx.ice_checkedCast(proxy, '::data::sendfile', facetOrCtx, _ctx)
        checkedCast = staticmethod(checkedCast)

        def uncheckedCast(proxy, facet=None):
            return _M_data.sendfilePrx.ice_uncheckedCast(proxy, facet)
        uncheckedCast = staticmethod(uncheckedCast)

    _M_data._t_sendfilePrx = IcePy.defineProxy('::data::sendfile', sendfilePrx)

    _M_data._t_sendfile = IcePy.defineClass('::data::sendfile', sendfile, -1, (), True, False, None, (), ())
    sendfile._ice_type = _M_data._t_sendfile

    sendfile._op_sendImage = IcePy.Operation('sendImage', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0)), (), ((), IcePy._t_bool, False, 0), ())

    _M_data.sendfile = sendfile
    del sendfile

    _M_data.sendfilePrx = sendfilePrx
    del sendfilePrx

# End of module data
